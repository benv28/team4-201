
************ multi threading stuff???????? ****************

class:
	Transaction
		roomID
		purchaser
		splitter
		amount
		TabItem
		bool confirmed

	TabsTotal
		user1 is the user with smaller ID
		if there is no TabsTotal in either direction, create a new one
		otherwise just draw from db
		make sure there is no duplicate!!!

	TabLedger
		//
			when this class is instantiated should also change the tabs total between purchaser and each tabsplitters
			amount = item.quantity * pricePerItem / number of splitters
		//
		Originally this is created when adding a new transaction to record a tab
		Now when adding a new transaction, create a transaction for each splitter


	TabItem

	GroceryItem
		different from TabItem
		may be both inherit from item?
		int roomID;
		so for grocery list just search for all GroceryItem that has roomID = x

	User

	Room


Implement tempFakeDB:
	fake db, just contains bunch of TreeSet of everything
	vectors of:
		Transaction
		TabsTotal
		XXXXX: TabLedger <-- this is just middle class for making transactions
		TabItem
		GroceryItem
		tempUser
		tempRoom

Servlet:
	1. addGroceryItem
		create, add to db
	2. removeGroceryItem
		search, remove from db
	3. getGroceryList
		for now grocery list doesn't support auto add to transaction list yet
		it is just a grocery list......
		search for all GroceryItem where roomID = x
	4. getConfirmedTransactionList
		search for Transaction either purchaser = self or self is in tab splitter && confirmed = true
	5. getPendingTransactionList
		search for Transaction either purchaser = self or self is in tab splitter && confirmed = false
	5. addTransaction
		create, add to db
	6. confirmTransaction
		search in db, change isConfirmed status
		when a transaction is confirmed, update tabs total between purchaser and splitter
	7. getTabsTotalList
		get all Tabs total where user1 = self or user2 = self
		make sure there is no user1 = self && user2 = self, although this shouldn't happen

How to access these methods?
	MagicBox class that contains all methods?
	just call them in servlet?

JS:
	1. get list from servlet, make them into nice html stuff (correspond to each get)
	2. process form data and throw to servlet
	3. AJAX stuff
